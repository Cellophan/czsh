# games
: 0000000000:0;sudo apt update && sudo apt install -qy cataclysm-dda-curses cataclysm-dda-sdl cataclysm-dda-data && /usr/games/cataclysm-tiles
: 0000000000:0;sudo apt update && sudo apt install -qy nethack-console
# aws
: 0000000000:0;asp 
: 0000000000:0;$(aws ecr get-login --no-include-email)
: 0000000000:0;aws ssm start-session --target 
: 0000000000:0;aws sts get-caller-identity
# tools
: 0000000000:0;exec $SHELL
: 0000000000:0;pwgen -ysBv 32
: 0000000000:0;export EDITOR=vim
: 0000000000:0;cd $(mktemp -d)
# docker
: 0000000000:0;up && down
: 0000000000:0;deploy -c docker-compose.yml --with-registry-auth plic
# git
: 0000000000:0;watch -n 600 'git pull && git add . &&  git commit --allow-empty-message -m ""  && git push'
: 0000000000:0;git commit --allow-empty -m EMPTY
: 0000000000:0;git submodule update --recursive
: 0000000000:0;git town prune-branches
: 0000000000:0;git reflog expire --expire-unreachable=all --all && git gc --prune=all
: 0000000000:0;git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)
: 0000000000:0;master && pull && checkout -b 
: 0000000000:0;switch -t 
: 0000000000:0;stash apply
: 0000000000:0;git filter-repo --invert-paths --path 
# go
: 0000000000:0;go-install 1.16.10
: 0000000000:0;dlv debug 
# python
: 0000000000:0;alias python="XDG_CONFIG_HOME=${PWD}/.config python -m pudb"
: 0000000000:0;(mkdir -p vendor; cd vendor; pip download -r requirements.txt --no-binary :all: --no-cache-dir -d .; ls -1 *gz | xargs -n 1 tar xvzf; ls -1 *gz | xargs rm -v ; ls -1 *zip | xargs -n 1 tar xvzf; ls -1 *zip | xargs rm -v)
: 0000000000:0;sudo pip3 install --system . && exec $SHELL
: 0000000000:0;sudo pip3 install virtualenv && pip3 install ansible
: 0000000000:0;python3 -m venv ~/• && source ~/•/bin/activate
: 0000000000:0;ansible-playbook -i 
: 0000000000:0;pip3 freeze > requirements.txt
: 0000000000:0;pip3 install -r requirements.txt
# kubectl
: 0000000000:0;VIRTUAL_ENV="\$(kubectl config current-context)"
: 0000000000:0;kubectl cluster-info
# theme
: 0000000000:0;export PRIMARY_FG=black
# Terraform
: 0000000000:0;terraform graph | dot -Tsvg > graph.svg && xdg-open ${PWD}/graph.svg #graphviz
: 0000000000:0;apply
: 0000000000:0;plan -destroy
: 0000000000:0;plan
# Install
: 0000000000:0;sudo apt update && sudo apt install -qy graphviz
: 0000000000:0;curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list && sudo apt update && sudo apt install -qy nodejs npm yarn
: 0000000000:0;sudo apt update && sudo apt install -qy firefox ubuntu-restricted-extras libcanberra-gtk-module libcanberra-gtk3-module gnome-colors-common
: 0000000000:0;sudo apt update && sudo apt install -qy ruby && sudo gem install bundler
: 0000000000:0;sudo apt update && sudo apt install -qy 
